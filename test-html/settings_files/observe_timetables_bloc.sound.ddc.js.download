define(['dart_sdk', 'packages/bloc/bloc', 'packages/web_client/core/contracts/repository_contract', 'packages/web_client/core/entities/timetable'], (function load__packages__web_client__core__bloc__observe_timetables__observe_timetables_bloc(dart_sdk, packages__bloc__bloc, packages__web_client__core__contracts__repository_contract, packages__web_client__core__entities__timetable) {
  'use strict';
  const core = dart_sdk.core;
  const async = dart_sdk.async;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const bloc = packages__bloc__bloc.src__bloc;
  const repository_contract = packages__web_client__core__contracts__repository_contract.core__contracts__repository_contract;
  const timetable = packages__web_client__core__entities__timetable.core__entities__timetable;
  var observe_timetables_bloc = Object.create(dart.library);
  dart._checkModuleNullSafetyMode(true);
  var T = {
    _AsyncStarImplOfObserveTimetablesState: () => (T._AsyncStarImplOfObserveTimetablesState = dart.constFn(async._AsyncStarImpl$(observe_timetables_bloc.ObserveTimetablesState)))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  var I = ["package:web_client/core/bloc/observe_timetables/observe_timetables_bloc.dart"];
  var repo$ = dart.privateName(observe_timetables_bloc, "ObserveTimetablesBloc.repo");
  observe_timetables_bloc.ObserveTimetablesEvent = class ObserveTimetablesEvent extends core.Object {};
  (observe_timetables_bloc.ObserveTimetablesEvent.new = function() {
    ;
  }).prototype = observe_timetables_bloc.ObserveTimetablesEvent.prototype;
  dart.addTypeTests(observe_timetables_bloc.ObserveTimetablesEvent);
  dart.addTypeCaches(observe_timetables_bloc.ObserveTimetablesEvent);
  dart.setLibraryUri(observe_timetables_bloc.ObserveTimetablesEvent, I[0]);
  observe_timetables_bloc.ObserveTimetablesState = class ObserveTimetablesState extends core.Object {};
  (observe_timetables_bloc.ObserveTimetablesState.new = function() {
    ;
  }).prototype = observe_timetables_bloc.ObserveTimetablesState.prototype;
  dart.addTypeTests(observe_timetables_bloc.ObserveTimetablesState);
  dart.addTypeCaches(observe_timetables_bloc.ObserveTimetablesState);
  dart.setLibraryUri(observe_timetables_bloc.ObserveTimetablesState, I[0]);
  observe_timetables_bloc.ObserveTimetablesBloc = class ObserveTimetablesBloc extends bloc.Bloc$(observe_timetables_bloc.ObserveTimetablesEvent, observe_timetables_bloc.ObserveTimetablesState) {
    get repo() {
      return this[repo$];
    }
    set repo(value) {
      super.repo = value;
    }
    mapEventToState(event) {
      observe_timetables_bloc.ObserveTimetablesEvent.as(event);
      return new (T._AsyncStarImplOfObserveTimetablesState()).new((function* mapEventToState(stream) {
        if (observe_timetables_bloc.ObserveTimetablesInit.is(event)) {
          if (stream.add(new observe_timetables_bloc.ObserveTimetablesLoadingContent.new())) return;
          yield;
        }
        if (observe_timetables_bloc.ObserveTimetablesLoadContent.is(event)) {
          if (stream.add(new observe_timetables_bloc.ObserveTimetablesContentLoaded.new(yield this.repo.getTimetables(this.repo.groupId)))) return;
          yield;
        }
      }).bind(this)).stream;
    }
  };
  (observe_timetables_bloc.ObserveTimetablesBloc.new = function(repo) {
    this[repo$] = repo;
    observe_timetables_bloc.ObserveTimetablesBloc.__proto__.new.call(this, new observe_timetables_bloc.ObserveTimetablesLoadingContent.new());
    ;
  }).prototype = observe_timetables_bloc.ObserveTimetablesBloc.prototype;
  dart.addTypeTests(observe_timetables_bloc.ObserveTimetablesBloc);
  dart.addTypeCaches(observe_timetables_bloc.ObserveTimetablesBloc);
  dart.setMethodSignature(observe_timetables_bloc.ObserveTimetablesBloc, () => ({
    __proto__: dart.getMethods(observe_timetables_bloc.ObserveTimetablesBloc.__proto__),
    mapEventToState: dart.fnType(async.Stream$(observe_timetables_bloc.ObserveTimetablesState), [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(observe_timetables_bloc.ObserveTimetablesBloc, I[0]);
  dart.setFieldSignature(observe_timetables_bloc.ObserveTimetablesBloc, () => ({
    __proto__: dart.getFields(observe_timetables_bloc.ObserveTimetablesBloc.__proto__),
    repo: dart.finalFieldType(repository_contract.RepositoryContract)
  }));
  observe_timetables_bloc.ObserveTimetablesInit = class ObserveTimetablesInit extends observe_timetables_bloc.ObserveTimetablesEvent {};
  (observe_timetables_bloc.ObserveTimetablesInit.new = function() {
    ;
  }).prototype = observe_timetables_bloc.ObserveTimetablesInit.prototype;
  dart.addTypeTests(observe_timetables_bloc.ObserveTimetablesInit);
  dart.addTypeCaches(observe_timetables_bloc.ObserveTimetablesInit);
  dart.setLibraryUri(observe_timetables_bloc.ObserveTimetablesInit, I[0]);
  observe_timetables_bloc.ObserveTimetablesLoadContent = class ObserveTimetablesLoadContent extends observe_timetables_bloc.ObserveTimetablesEvent {};
  (observe_timetables_bloc.ObserveTimetablesLoadContent.new = function() {
    ;
  }).prototype = observe_timetables_bloc.ObserveTimetablesLoadContent.prototype;
  dart.addTypeTests(observe_timetables_bloc.ObserveTimetablesLoadContent);
  dart.addTypeCaches(observe_timetables_bloc.ObserveTimetablesLoadContent);
  dart.setLibraryUri(observe_timetables_bloc.ObserveTimetablesLoadContent, I[0]);
  observe_timetables_bloc.ObserveTimetablesLoadingContent = class ObserveTimetablesLoadingContent extends observe_timetables_bloc.ObserveTimetablesState {};
  (observe_timetables_bloc.ObserveTimetablesLoadingContent.new = function() {
    ;
  }).prototype = observe_timetables_bloc.ObserveTimetablesLoadingContent.prototype;
  dart.addTypeTests(observe_timetables_bloc.ObserveTimetablesLoadingContent);
  dart.addTypeCaches(observe_timetables_bloc.ObserveTimetablesLoadingContent);
  dart.setLibraryUri(observe_timetables_bloc.ObserveTimetablesLoadingContent, I[0]);
  var timetables$ = dart.privateName(observe_timetables_bloc, "ObserveTimetablesContentLoaded.timetables");
  observe_timetables_bloc.ObserveTimetablesContentLoaded = class ObserveTimetablesContentLoaded extends observe_timetables_bloc.ObserveTimetablesState {
    get timetables() {
      return this[timetables$];
    }
    set timetables(value) {
      super.timetables = value;
    }
  };
  (observe_timetables_bloc.ObserveTimetablesContentLoaded.new = function(timetables) {
    this[timetables$] = timetables;
    ;
  }).prototype = observe_timetables_bloc.ObserveTimetablesContentLoaded.prototype;
  dart.addTypeTests(observe_timetables_bloc.ObserveTimetablesContentLoaded);
  dart.addTypeCaches(observe_timetables_bloc.ObserveTimetablesContentLoaded);
  dart.setLibraryUri(observe_timetables_bloc.ObserveTimetablesContentLoaded, I[0]);
  dart.setFieldSignature(observe_timetables_bloc.ObserveTimetablesContentLoaded, () => ({
    __proto__: dart.getFields(observe_timetables_bloc.ObserveTimetablesContentLoaded.__proto__),
    timetables: dart.finalFieldType(core.List$(timetable.Timetable))
  }));
  observe_timetables_bloc.ObserveTimetablesContentNotLoaded = class ObserveTimetablesContentNotLoaded extends observe_timetables_bloc.ObserveTimetablesState {};
  (observe_timetables_bloc.ObserveTimetablesContentNotLoaded.new = function() {
    ;
  }).prototype = observe_timetables_bloc.ObserveTimetablesContentNotLoaded.prototype;
  dart.addTypeTests(observe_timetables_bloc.ObserveTimetablesContentNotLoaded);
  dart.addTypeCaches(observe_timetables_bloc.ObserveTimetablesContentNotLoaded);
  dart.setLibraryUri(observe_timetables_bloc.ObserveTimetablesContentNotLoaded, I[0]);
  dart.trackLibraries("packages/web_client/core/bloc/observe_timetables/observe_timetables_bloc", {
    "package:web_client/core/bloc/observe_timetables/observe_timetables_bloc.dart": observe_timetables_bloc
  }, {
    "package:web_client/core/bloc/observe_timetables/observe_timetables_bloc.dart": ["observe_timetables_event.dart", "observe_timetables_state.dart"]
  }, '{"version":3,"sourceRoot":"","sources":["observe_timetables_event.dart","observe_timetables_bloc.dart","observe_timetables_state.dart"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;EAmBuC;;;;;;;;;;;;ICUZ;;;;;;oBAIA;;AADqB;AAI5C,YAAU,iDAAN,KAAK;AACP,yBAAM;UAAN;;AAGF,YAAU,wDAAN,KAAK;AACP,yBAAM,+DAA+B,MAAM,AAAK,wBAAc,AAAK;UAAnE;;MAEJ;;;;IAf2B;AAAQ,2EAAM;;EAAkC;;;;;;;;;;;;;;;EDPjB;;;;;;;EAEO;;;;;;;EEFG;;;;;;IAK9C;;;;;;;;IAFc;;EAAW;;;;;;;;;;;EAMuB","file":"observe_timetables_bloc.sound.ddc.js"}');
  // Exports:
  return {
    core__bloc__observe_timetables__observe_timetables_bloc: observe_timetables_bloc
  };
}));

//# sourceMappingURL=observe_timetables_bloc.sound.ddc.js.map
