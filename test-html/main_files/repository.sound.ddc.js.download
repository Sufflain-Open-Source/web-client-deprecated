define(['dart_sdk', 'packages/web_client/data/util/local_database', 'packages/web_client/data/util/remote_database', 'packages/web_client/core/contracts/repository_contract', 'packages/web_client/core/contracts/local_database_contract', 'packages/web_client/core/contracts/remote_database_contract', 'packages/web_client/core/entities/timetable'], (function load__packages__web_client__data__implementations__repository(dart_sdk, packages__web_client__data__util__local_database, packages__web_client__data__util__remote_database, packages__web_client__core__contracts__repository_contract, packages__web_client__core__contracts__local_database_contract, packages__web_client__core__contracts__remote_database_contract, packages__web_client__core__entities__timetable) {
  'use strict';
  const core = dart_sdk.core;
  const _internal = dart_sdk._internal;
  const async = dart_sdk.async;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const local_database = packages__web_client__data__util__local_database.data__util__local_database;
  const remote_database = packages__web_client__data__util__remote_database.data__util__remote_database;
  const repository_contract = packages__web_client__core__contracts__repository_contract.core__contracts__repository_contract;
  const local_database_contract = packages__web_client__core__contracts__local_database_contract.core__contracts__local_database_contract;
  const remote_database_contract = packages__web_client__core__contracts__remote_database_contract.core__contracts__remote_database_contract;
  const timetable = packages__web_client__core__entities__timetable.core__entities__timetable;
  var repository = Object.create(dart.library);
  dart._checkModuleNullSafetyMode(true);
  const CT = Object.create({
    _: () => (C, CT)
  });
  var I = ["package:web_client/data/implementations/repository.dart"];
  var __Repository__localDatabase = dart.privateName(repository, "_#Repository#_localDatabase");
  var __Repository__remoteDatabase = dart.privateName(repository, "_#Repository#_remoteDatabase");
  var _localDatabase = dart.privateName(repository, "_localDatabase");
  var _remoteDatabase = dart.privateName(repository, "_remoteDatabase");
  repository.Repository = class Repository extends core.Object {
    get [_localDatabase]() {
      let t0;
      t0 = this[__Repository__localDatabase];
      return t0 == null ? dart.throw(new _internal.LateError.fieldNI("_localDatabase")) : t0;
    }
    set [_localDatabase](t0) {
      if (this[__Repository__localDatabase] == null)
        this[__Repository__localDatabase] = t0;
      else
        dart.throw(new _internal.LateError.fieldAI("_localDatabase"));
    }
    get [_remoteDatabase]() {
      let t1;
      t1 = this[__Repository__remoteDatabase];
      return t1 == null ? dart.throw(new _internal.LateError.fieldNI("_remoteDatabase")) : t1;
    }
    set [_remoteDatabase](t1) {
      if (this[__Repository__remoteDatabase] == null)
        this[__Repository__remoteDatabase] = t1;
      else
        dart.throw(new _internal.LateError.fieldAI("_remoteDatabase"));
    }
    static get instance() {
      let t2;
      t2 = repository.Repository._instance;
      return t2 == null ? repository.Repository._instance = new repository.Repository.__() : t2;
    }
    getTimetables(groupId) {
      return this[_remoteDatabase].getTimetables(groupId);
    }
    get isGroupSaved() {
      return this[_localDatabase].isGroupSaved;
    }
    get groupId() {
      return this[_localDatabase].groupId;
    }
    set groupId(groupId) {
      return this[_localDatabase].groupId = groupId;
    }
    getGroups() {
      return this[_remoteDatabase].getGroups();
    }
  };
  (repository.Repository.__ = function() {
    this[__Repository__localDatabase] = null;
    this[__Repository__remoteDatabase] = null;
    this[_localDatabase] = new local_database.LocalDatabase.new();
    this[_remoteDatabase] = new remote_database.RemoteDatabase.new();
  }).prototype = repository.Repository.prototype;
  dart.addTypeTests(repository.Repository);
  dart.addTypeCaches(repository.Repository);
  repository.Repository[dart.implements] = () => [repository_contract.RepositoryContract];
  dart.setMethodSignature(repository.Repository, () => ({
    __proto__: dart.getMethods(repository.Repository.__proto__),
    getTimetables: dart.fnType(async.Future$(core.List$(timetable.Timetable)), [core.String]),
    getGroups: dart.fnType(async.Future$(core.List$(core.String)), [])
  }));
  dart.setGetterSignature(repository.Repository, () => ({
    __proto__: dart.getGetters(repository.Repository.__proto__),
    [_localDatabase]: local_database_contract.LocalDatabaseContract,
    [_remoteDatabase]: remote_database_contract.RemoteDatabaseContract,
    isGroupSaved: core.bool,
    groupId: core.String
  }));
  dart.setSetterSignature(repository.Repository, () => ({
    __proto__: dart.getSetters(repository.Repository.__proto__),
    [_localDatabase]: local_database_contract.LocalDatabaseContract,
    [_remoteDatabase]: remote_database_contract.RemoteDatabaseContract,
    groupId: core.String
  }));
  dart.setLibraryUri(repository.Repository, I[0]);
  dart.setFieldSignature(repository.Repository, () => ({
    __proto__: dart.getFields(repository.Repository.__proto__),
    [__Repository__localDatabase]: dart.fieldType(dart.nullable(local_database_contract.LocalDatabaseContract)),
    [__Repository__remoteDatabase]: dart.fieldType(dart.nullable(remote_database_contract.RemoteDatabaseContract))
  }));
  dart.defineLazy(repository.Repository, {
    /*repository.Repository._instance*/get _instance() {
      return null;
    },
    set _instance(_) {}
  }, false);
  dart.trackLibraries("packages/web_client/data/implementations/repository", {
    "package:web_client/data/implementations/repository.dart": repository
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["repository.dart"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAkCmC;;IAAc;;AAAd;;;;IAAc;;;AACb;;IAAe;;AAAf;;;;IAAe;;;AAEf;0BAAU,kCAAe;IAAG;kBAMjB;AACzC,YAAA,AAAgB,qCAAc,OAAO;IAAC;;AAGjB,YAAA,AAAe;IAAY;;AAG9B,YAAA,AAAe;IAAO;gBAGzB;AAAY,YAAA,AAAe,gCAAU,OAAO;;;AAG3B,YAAA,AAAgB;IAAW;;;wCAtB9B;yCACC;AAPA,IAAhC,uBAAiB;AACiB,IAAlC,wBAAkB;EACpB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAEmB,+BAAS","file":"repository.sound.ddc.js"}');
  // Exports:
  return {
    data__implementations__repository: repository
  };
}));

//# sourceMappingURL=repository.sound.ddc.js.map
